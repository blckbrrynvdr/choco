
@mixin flexCenter {
	display: flex;
	align-items: center;
	justify-content: center;
}


// функция перевода пикселей в rem
@function rem($px){
	@return $px / $projectFontSize + 0rem;
}


// Не потеряться в z-index 9999999999
@function findZ($name) {
	@if index($z-indexes, $name) {
	 @return (length($z-indexes) - index($z-indexes, $name)) + 1;
	} @else {
	 @warn 'There is no item "#{$name}" in this list; choose one of: #{$z-indexes}';
	 @return null;
	}
  }
  $z-indexes: (
	"outdated-browser",
	"site-header",
	"page-wrapper",
	"site-footer",
    "fixed-menu",
	"modal",
  );
//   .some-class {
// 	  z-index: findZ("site-header");
//   }


  // Преднастройки для псевдо
  @mixin pseudo($display: block, $pos: absolute, $content: ''){
	content: $content;
	display: $display;
	position: $pos;
  }
//   .some-class {
//      @include pseudo;
//      top: -1rem;
//      left: -1rem;
//      width: 1rem;
//      height: 1rem;
//  }


// треугольники
@mixin css-triangle($color, $direction, $size: 6px, $position: absolute, $round: false){
	@include pseudo($pos: $position);
	width: 0;
	height: 0;
	@if $round {
	  border-radius: 3px;
	}
	@if $direction == down {
	  border-left: $size solid transparent;
	  border-right: $size solid transparent;
	  border-top: $size solid $color;
	  margin-top: 0 - round( $size / 2.5 );
	} @else if $direction == up {
	  border-left: $size solid transparent;
	  border-right: $size solid transparent;
	  border-bottom: $size solid $color;
	  margin-bottom: 0 - round( $size / 2.5 );
	} @else if $direction == right {
	  border-top: $size solid transparent;
	  border-bottom: $size solid transparent;
	  border-left: $size solid $color;
	  margin-right: -$size;
	} @else if  $direction == left {
	  border-top: $size solid transparent;
	  border-bottom: $size solid transparent;
	  border-right: $size solid $color;
	  margin-left: -$size;
	}
  }

//   .some-class {
//     &::before {
//         @include css-triangle(red, up, 60px);
//     }
// }


// hover с цветом
@mixin hoverColor($color) {
	transition: color .3s ease-out;
	&:hover, &:focus {
		color: $color;
	}
}

// hover с прозрачностью
@mixin hoverOpacity($opacity) {
	transition: opacity .3s ease-out;
	opacity: 1;
	&:hover, &:focus {
		opacity: $opacity;
	}
}


// .some-class {
//     @include hoverColor(red);
//     @include hoverOpacity(.5);
// }